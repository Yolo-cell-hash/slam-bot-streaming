
<html lang="en">
<head>

    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.min.js"></script> 
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <link rel="icon" type="image/png" href="/images/map-favicon.png">


    
    <script src="https://kit.fontawesome.com/8e7cdbc65b.js" crossorigin="anonymous"></script>


    <title>SLAM-BOT</title>
    <link rel="stylesheet" href="/styles.css">

    <style>
        /* Styles for the points */
        .point {
          position: absolute;
          width: 30px; 
          height: 30px; 
          background-image: url('/images/flag.png');
          background-size: cover;
          z-index: 1000;
        }

        .point2{
          position: absolute;
          width: 30px; 
          height: 30px; 
          background-image: url('/images/red-flag.png');
          background-size: cover;
          z-index: 1000;
        }
      </style>

</head>
<body>
    <div id="here"  class="cam-feed-enabler-1">
        <h1 class="receiver_header">Camera Feed</h1>
        <img class="vid-plyr vid-stream-width" src="<%= imageData %>" alt="frame">
    </div>
    
    <!-- <div id="also_here">
        <canvas id="radar-chart"></canvas>
    </div> -->

    <div class="cam-feed-enabler">
        <h1 class="receiver_header">Shortest Path</h1>

        <div id="pointsContainer" style="z-index: 999; position: relative;">
            <div class="pad-sides">
                <img class="map-display" height="<%= imageHeight%>" width="<%=imageWidth%>" id="img" src="<%= img_path%>" alt="Image" style="z-index: 100; display: none;">
            
            <div id="coordinatesDisplay" style="display: none;" ></div>

            <button class="enabler-btns" id="toggleButton"> 
                <span class="button__text">Show Map </span>
                <i class="button__icon fas fa-map"></i>
            </button>

            <button class="btn btn-lg enabler-btns" id="resetButton"> 
                <span class="button__text">Reset </span>
                <i class="button__icon fas fa-eraser"></i>
            </button>

            <button class="btn btn-lg enabler-btns" id="submitButton"> 
                <span class="button__text">Submit </span>
                <i class="button__icon fas fa-paper-plane"></i>            
            </button>
            </div>

            <div style="display: none;" class="vid-plyr" id="hidden_div">
                <h1 class="receiver_header">Shortest Path among the Coordinates</h1>
                <img height="<%= imageHeight%>" width="<%=imageWidth%>" id="img_1" src="<%= algo_map_path%>" alt="Shortest Path Map">
            </div>

            <script>
                const clickedCoordinates = [];
        
                function handleImageClick(event) {
                    console.log("Image clicked");
                    const image = document.getElementById('img');
                    const rect = image.getBoundingClientRect();
                    const x = Math.round(event.clientX - rect.left);
                    const y = Math.round(event.clientY - rect.top);
                    console.log(`Clicked at coordinates: x=${x}, y=${y}`);
        
                    clickedCoordinates.push({ x, y });
                
                    if (clickedCoordinates.length === 1) {
                        const startPoint = clickedCoordinates[0];
                        const h4Start = document.createElement('h4');
                        h4Start.textContent = `Start Point: x=${startPoint.x}, y=${startPoint.y}`;
                        h4Start.classList.add('points_display');
                        document.getElementById('coordinatesDisplay').style.display = 'block';
                        coordinatesDisplay.appendChild(h4Start);
                    } else if (clickedCoordinates.length === 2) {
                        const endPoint = clickedCoordinates[1];
                        const h4End = document.createElement('h4');
                        h4End.textContent = `End Point: x=${endPoint.x}, y=${endPoint.y}`;
                        h4End.classList.add('points_display');
                        document.getElementById('coordinatesDisplay').style.display = 'block';
                        coordinatesDisplay.appendChild(h4End);
        
                        document.getElementById('img').removeEventListener('click', handleImageClick);
                    }
        

                    if(clickedCoordinates.length === 1){
                        const point = document.createElement('div');
                        point.className = 'point2';
                        point.style.left = `${x}px`;
                        point.style.top = `${y}px`;
            
                        const pointsContainer = document.getElementById('pointsContainer');
                        pointsContainer.appendChild(point);
                    }
                    else if(clickedCoordinates.length === 2){
                        const point = document.createElement('div');
                        point.className = 'point';
                        point.style.left = `${x}px`;
                        point.style.top = `${y}px`;
            
                        const pointsContainer = document.getElementById('pointsContainer');
                        pointsContainer.appendChild(point);
                    }




                    const point = document.createElement('div');
                   // point.className = 'point';
                    point.style.left = `${x}px`;
                    point.style.top = `${y}px`;
        
                    const pointsContainer = document.getElementById('pointsContainer');
                    pointsContainer.appendChild(point);
                }
        
                function handleResetButtonClick() {
                    clickedCoordinates.length = 0;
        
                    const coordinatesDisplay = document.getElementById('coordinatesDisplay');
                    coordinatesDisplay.innerHTML = '';
                    document.getElementById('coordinatesDisplay').style.display = 'none';

        
                    const dynamicPoints = document.getElementsByClassName('point');
                    const dynamicPoints2 = document.getElementsByClassName('point2');
                    while (dynamicPoints.length > 0) {
                        dynamicPoints[0].parentNode.removeChild(dynamicPoints[0]);
                    }

                    while (dynamicPoints2.length > 0) {
                        dynamicPoints2[0].parentNode.removeChild(dynamicPoints2[0]);
                    }
        
                    document.getElementById('img').addEventListener('click', handleImageClick);
                }


        function handleSubmitButtonClick() {
                if (clickedCoordinates.length === 2) {
                    const start = clickedCoordinates[0];
                    const end = clickedCoordinates[1];

                    const coordinates = { start, end };

                fetch('/saveCoordinates', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(coordinates)
                })
                .then(response => {
                    if (response.ok) {
                        alert('Coordinates sent successfully!');
                        document.getElementById('hidden_div').style.display = 'block';
                        document.getElementById('img_1').src = '<%= algo_map_path%>';
                    }
                    return response.text();
                })
                .then(response => response.text())

                .catch(error => console.error('Error:', error));
            } else {
                alert('Please select both start and end coordinates before submitting.');
            }
        }

                
        
                document.getElementById('img').addEventListener('click', handleImageClick);
                document.getElementById('submitButton').addEventListener('click', handleSubmitButtonClick);        
                document.getElementById('resetButton').addEventListener('click', handleResetButtonClick);
        
            </script>
        </div>
    </div>    
        
        
        




       

        

        


<!-- <script>
    $(document).ready(function() {
        $('#toggleButton').click(function() {
            if ($('#image').css('display') == 'none') {
                $('#image').css('display', 'block');
            } else {
                $('#image').css('display', 'none');
            }
        });
    });
</script> -->


<script>
    document.getElementById('toggleButton').addEventListener('click', function() {
        const mapImage = document.getElementById('img');

        const toggleButton = document.getElementById('toggleButton');
        const points = document.querySelectorAll('.point, .point2'); // Select all points

        if (mapImage.style.display === 'none') {
            mapImage.style.display = 'block';
            toggleButton.innerHTML = '<span class="button__text">Hide Map </span><i class="button__icon fas fa-map"></i>';

            points.forEach(function(point) {
                point.style.display = 'block';
            });
            
        } else {
            mapImage.style.display = 'none';
            toggleButton.innerHTML = '<span class="button__text">Show Map </span><i class="button__icon fas fa-map"></i>';

            points.forEach(function(point) {
                point.style.display = 'none';
            });
        }
    });
</script>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var image = document.getElementById("image");
            var updateButton = document.getElementById("updateButton");
            var cooldownInProgress = false;
    
            updateButton.addEventListener("click", function() {
                if (!cooldownInProgress) {
                    cooldownInProgress = true;    
                    updateButton.disabled = true;
                    updateButton.classList.add('disabled'); // Add the disabled class
                    image.src = '<%=img_path %>';
                    setTimeout(function() {
                        updateButton.disabled = false;
                        updateButton.classList.remove('disabled'); // Remove the disabled class
                        cooldownInProgress = false; 
                    }, 15000);
                }
            });
        });
    </script>
    

    <!-- <script> 
    const formattedData = <%- JSON.stringify(numbersData.map(point => ({ label: point.number + '°', value: point.randomNumber })) ) %>;
        var ctx = document.getElementById('radar-chart').getContext('2d');
        var radarChart = new Chart(ctx, {
            type: 'radar',
            data: {
                labels: formattedData.map(point => point.label),
                datasets: [{
                    label: 'Data Points',
                    data: formattedData.map(point => point.value),
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
        });
    </script> -->


    <script>
        function updateDiv()
    { 
        $( "#here" ).load(window.location.href + " #here" );
    }
    setInterval(updateDiv, 100);
    </script>

</body>
</html>



